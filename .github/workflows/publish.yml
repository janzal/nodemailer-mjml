name: Publish ðŸ“¦

on:
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Tests:checkout"
        uses: actions/checkout@v2
      
      - name: "Tests:run"
        run: docker compose run tests yarn test
  
  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: "Publish:checkout"
        uses: actions/checkout@v2
      
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '23.x'
          registry-url: 'https://registry.npmjs.org'
      - name: "Enable corepack"
        run: corepack enable
        
      - name: "Publish:install"
        run: yarn
      
      - name: "Publish:build"
        run: yarn build

      - name: "Publish:publish package on NPM ðŸ“¦"
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-gpr:
    needs: publish-npm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Publish:checkout"
        uses: actions/checkout@v2
      
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '23.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@janzal'
      
      - name: "Enable corepack"
        run: corepack enable
        
      - name: "Publish:install"
        run: yarn
      
      - name: "Publish:build"
        run: yarn build

      - name: "Configure package for GitHub Packages"
        run: |
          node -e "const fs = require('fs'); const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8')); pkg.name = '@janzal/nodemailer-mjml'; pkg.publishConfig = { registry: 'https://npm.pkg.github.com' }; fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));"

      - name: "Publish:publish package on GitHub Packages ðŸ“¦"
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    
